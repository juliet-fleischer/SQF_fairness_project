tsk_sqf
# initialize fairness measure
# punitive
fairness_msr_punitive <- msrs(c("fairness.fpr","fairness.tnr","fairness.ppv"))
# "fairness.fdr" (not implemented but should be as equivalent for fairness.fomr)
predictions$score(fairness_msr_punitive, task = tsk_sqf)
# assistive
fairness_msr_assistive <- msrs(c("fairness.fnr","fairness.tpr", "fairness.npv",
"fairness.fomr"))
predictions$score(fairness_msr_assistive, task = tsk_sqf)
# in between
fairness_mrs_other <- msrs(c("fairness.acc", "fairness.cv", "fairness.eod"))
predictions$score(fairness_mrs_other, task = tsk_sqf)
# Defines punitive base measures
base_mrs_punitive <- list(
fpr = msr("classif.fpr"),
tnr = msr("classif.tnr"),
ppv = msr("classif.ppv"),
fdr = msr("classif.fdr")
)
# Define multiple base measures
base_mrs_assistive <- list(
fnr = msr("classif.fnr"),
tpr = msr("classif.tpr"),
npv = msr("classif.npv"),
fomr = msr("classif.fomr")
)
# define mixed base measures
base_mrs_other <- list(
acc = msr("classif.acc"),
auc = msr("classif.auc"),
bbrier = msr("classif.bbrier")
)
calcGroupwiseMetrics(base_mrs_punitive, tsk_sqf)
calcGroupwiseMetrics(base_mrs_punitive, tsk_sqf)
calcGroupwiseMetrics(base_mrs_assistive, tsk_sqf)
calcGroupwiseMetrics(base_mrs_other, tsk_sqf)
fairness_prediction_density(predictions, task = tsk_sqf)
compare_metrics(predictions, fairness_msr_punitive, task = tsk_sqf)
compare_metrics(predictions, fairness_msr_assistive, task = tsk_sqf)
compare_metrics(predictions, fairness_mrs_other, task = tsk_sqf)
str(imputed_data)
writexl::write_xlsx(imputed_data, path = "data/imputed_data_frisked.xlsx")
features
names(sqf.2023)
unique(sqf.2023)
unique(sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG)
subst <- sqf.2023[, c("FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG", "WEAPON_FOUND_FLAG")]
head(subst)
subst |>
filter(any_of(c("FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG") == "Y") & "WEAPON_FOUND_FLAG" == "N")
subst %>%
mutate(
has_weapon_flag = if_any(c("FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG"), ~ . == "Y")
) %>%
filter(has_weapon_flag & WEAPON_FOUND_FLAG == "N")
subst %>%
mutate(
has_weapon_flag = if_any(c("FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG"), ~ . == "Y")
) %>%
filter(has_weapon_flag & WEAPON_FOUND_FLAG == "N")
subst %>%
mutate(
has_weapon_flag = if_any(c("OTHER_CONTRABAND_FLAG", "FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG"), ~ . == "Y")
) %>%
filter(has_weapon_flag & WEAPON_FOUND_FLAG == "N")
subst <- sqf.2023[, c("OTHER_CONTRABAND_FLAG","FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG", "WEAPON_FOUND_FLAG")]
subst %>%
mutate(
has_weapon_flag = if_any(c("OTHER_CONTRABAND_FLAG", "FIREARM_FLAG", "KNIFE_CUTTER_FLAG", "OTHER_WEAPON_FLAG"), ~ . == "Y")
) %>%
filter(has_weapon_flag & WEAPON_FOUND_FLAG == "N")
names(sqf.2023)
unique(sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG)
unique(sqf.2023$BACKROUND_CIRCUMSTANCES_SUSPECT_KNOWN_TO_CARRY_WEAPON_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_SUSPECT_KNOWN_TO_CARRY_WEAPON_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_SUSPECT_KNOWN_TO_CARRY_WEAPON_FLAG)
target <- "SUSPECT_ARRESTED_FLAG"
# PAs
protected.a <- c("SUSPECT_REPORTED_AGE", "SUSPECT_SEX", "SUSPECT_RACE_DESCRIPTION")
if (target == "FRISKED_FLAG") {
features <- c("MONTH2", "DAY2", "STOP_FRISK_TIME",
"STOP_LOCATION_BORO_NAME", "LOCATION_IN_OUT_CODE", "STOP_DURATION_MINUTES",
"SUSPECT_HEIGHT", "SUSPECT_WEIGHT", "SUSPECT_BODY_BUILD_TYPE",
"SUSPECT_EYE_COLOR", "SUSPECT_HAIR_COLOR", "STOP_WAS_INITIATED",
"OFFICER_EXPLAINED_STOP_FLAG", "OFFICER_IN_UNIFORM_FLAG",
"ASK_FOR_CONSENT_FLG", "CONSENT_GIVEN_FLG")
} else if (target == "SUSPECT_ARRESTED_FLAG") {
features <- c(features, "WEAPON_FOUND_FLAG")
}
PA <- "SUSPECT_SEX"
features
set.seed(513)
target <- "SUSPECT_ARRESTED_FLAG"
# PAs
protected.a <- c("SUSPECT_REPORTED_AGE", "SUSPECT_SEX", "SUSPECT_RACE_DESCRIPTION")
if (target == "FRISKED_FLAG") {
features <- c("MONTH2", "DAY2", "STOP_FRISK_TIME",
"STOP_LOCATION_BORO_NAME", "LOCATION_IN_OUT_CODE", "STOP_DURATION_MINUTES",
"SUSPECT_HEIGHT", "SUSPECT_WEIGHT", "SUSPECT_BODY_BUILD_TYPE",
"SUSPECT_EYE_COLOR", "SUSPECT_HAIR_COLOR", "STOP_WAS_INITIATED",
"OFFICER_EXPLAINED_STOP_FLAG", "OFFICER_IN_UNIFORM_FLAG",
"ASK_FOR_CONSENT_FLG", "CONSENT_GIVEN_FLG")
} else if (target == "SUSPECT_ARRESTED_FLAG") {
features <- c(features, "WEAPON_FOUND_FLAG")
}
PA <- "SUSPECT_SEX"
features
# create subset of the data for arrested as target
sqf.2023.subset1 <- subset(sqf.2023, select = c("SUSPECT_ARRESTED_FLAG", protected.a, features))
# impute missing data
imp1 <- mice(sqf.2023.subset1, m = 1)
remove(features)
set.seed(513)
target <- "SUSPECT_ARRESTED_FLAG"
# PAs
protected.a <- c("SUSPECT_REPORTED_AGE", "SUSPECT_SEX", "SUSPECT_RACE_DESCRIPTION")
if (target == "FRISKED_FLAG") {
features <- c("MONTH2", "DAY2", "STOP_FRISK_TIME",
"STOP_LOCATION_BORO_NAME", "LOCATION_IN_OUT_CODE", "STOP_DURATION_MINUTES",
"SUSPECT_HEIGHT", "SUSPECT_WEIGHT", "SUSPECT_BODY_BUILD_TYPE",
"SUSPECT_EYE_COLOR", "SUSPECT_HAIR_COLOR", "STOP_WAS_INITIATED",
"OFFICER_EXPLAINED_STOP_FLAG", "OFFICER_IN_UNIFORM_FLAG",
"ASK_FOR_CONSENT_FLG", "CONSENT_GIVEN_FLG")
} else if (target == "SUSPECT_ARRESTED_FLAG") {
features <- c(features, "WEAPON_FOUND_FLAG")
}
set.seed(513)
target <- "SUSPECT_ARRESTED_FLAG"
# PAs
protected.a <- c("SUSPECT_REPORTED_AGE", "SUSPECT_SEX", "SUSPECT_RACE_DESCRIPTION")
features <- c("MONTH2", "DAY2", "STOP_FRISK_TIME",
"STOP_LOCATION_BORO_NAME", "LOCATION_IN_OUT_CODE", "STOP_DURATION_MINUTES",
"SUSPECT_HEIGHT", "SUSPECT_WEIGHT", "SUSPECT_BODY_BUILD_TYPE",
"SUSPECT_EYE_COLOR", "SUSPECT_HAIR_COLOR", "STOP_WAS_INITIATED",
"OFFICER_EXPLAINED_STOP_FLAG", "OFFICER_IN_UNIFORM_FLAG",
"ASK_FOR_CONSENT_FLG", "CONSENT_GIVEN_FLG")
if (target == "SUSPECT_ARRESTED_FLAG") {
features <- c(features, "WEAPON_FOUND_FLAG")
}
PA <- "SUSPECT_SEX"
features
# create subset of the data for arrested as target
sqf.2023.subset1 <- subset(sqf.2023, select = c("SUSPECT_ARRESTED_FLAG", protected.a, features))
# impute missing data
imp1 <- mice(sqf.2023.subset1, m = 1)
imputed_data <- complete(imp1)
str(imputed data)
str(imputed_data)
writexl::write_xlsx(imputed_data, path = "data/imputed_data_arrested.xlsx")
# initialize a classification task
tsk_sqf <- as_task_classif(imputed_data_g, target = target,
positive = "1", id = "STOP_ID")
if( PA == "SUSPECT_SEX") {
imputed_data_g <- imputed_data
#   tsk_sqf$col_roles$pta <- PA
} else {
g <- "race_group_d"
f.to.remove <- setdiff(race.grouping, g)
imputed_data_g <- imputed_data[, !names(imputed_data) %in% f.to.remove]
imputed_data_g[[g]]<- factor(imputed_data_g[[g]])
#  tsk_sqf$col_roles$pta <- g
}
tsk_sqf <- as_task_classif(imputed_data_g, target = target,
positive = "1", id = "STOP_ID")
if( PA == "SUSPECT_SEX") {
tsk_sqf$col_roles$pta <- PA
} else {
tsk_sqf$col_roles$pta <- g
}
PA
tsk_sqf
# create train train split
splits <- partition(tsk_sqf)
# initialize a learner
p <- ncol(imputed_data_g) - 1
lrn_rf <- lrn("classif.ranger", mtry = ceiling(p / 2), predict_type = "prob", importance = "impurity")
# train learner
lrn_rf$train(tsk_sqf, row_ids = splits$train)
# make predictions on test data
predictions <- lrn_rf$predict(tsk_sqf, row_ids = splits$test)
measures <- msrs(c("classif.acc", "classif.bbrier", "classif.auc"))
predictions$score(measures, task = tsk_sqf)
# initialize fairness measure
# punitive
fairness_msr_punitive <- msrs(c("fairness.fpr","fairness.tnr","fairness.ppv"))
# "fairness.fdr" (not implemented but should be as equivalent for fairness.fomr)
predictions$score(fairness_msr_punitive, task = tsk_sqf)
# assistive
fairness_msr_assistive <- msrs(c("fairness.fnr","fairness.tpr", "fairness.npv",
"fairness.fomr"))
predictions$score(fairness_msr_assistive, task = tsk_sqf)
# in between
fairness_mrs_other <- msrs(c("fairness.acc", "fairness.cv", "fairness.eod"))
predictions$score(fairness_mrs_other, task = tsk_sqf)
# Defines punitive base measures
base_mrs_punitive <- list(
fpr = msr("classif.fpr"),
tnr = msr("classif.tnr"),
ppv = msr("classif.ppv"),
fdr = msr("classif.fdr")
)
# Define multiple base measures
base_mrs_assistive <- list(
fnr = msr("classif.fnr"),
tpr = msr("classif.tpr"),
npv = msr("classif.npv"),
fomr = msr("classif.fomr")
)
# define mixed base measures
base_mrs_other <- list(
acc = msr("classif.acc"),
auc = msr("classif.auc"),
bbrier = msr("classif.bbrier")
)
calcGroupwiseMetrics(base_mrs_punitive, tsk_sqf)
calcGroupwiseMetrics(base_mrs_assistive, tsk_sqf)
calcGroupwiseMetrics(base_mrs_other, tsk_sqf)
fairness_prediction_density(predictions, task = tsk_sqf)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/setup.R")
?partition
0.33 * nrow(imputed_data)
imputed_data_arrested <- read_excel("data/imputed_data_arrested.xlsx")
imputed_data_arrested |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG))
imputed_data_arrested |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG) / n())
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / n())
setDT(sqf.2023)
n <- nrow(sqf.2023)
sqf.2023[sqf.2023 == "(null)"] <- NA
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / n())
source("program/data_cleaning.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("program/data_cleaning.R")
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / n())
imputed_data_arrested |> group_by(SUSPECT_SEX) |> summarise(sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / n())
imputed_data |> group_by(SUSPECT_SEX) |> summarise(sum(FRISKED_FLAG, na.rm = TRUE) / n())
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(FRISKED_FLAG, na.rm = TRUE) / n())
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(SEARCHED_FLAG, na.rm = TRUE) / n())
convertFactorNumeric(sqf.2023, "SEARCHED_FLAG", c("Y", "N"), c(1, 0))
sqf.2023 |> group_by(SUSPECT_SEX) |> summarise(sum(SEARCHED_FLAG, na.rm = TRUE) / n())
# setup script
set.seed(024)
library(data.table)
library(readxl)
library(ggplot2)
library(pROC)
library(tidyverse)
library(mlr3verse)
library(mlr3fairness)
library(mice)
library(checkmate)
library(iml)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("program/data_cleaning.R")
writexl::write_xlsx(sqf.2023, "data/sqf_2023_clean.xlsx")
sqf.2023 <- read_excel("data/sqf_2023_clean.xlsx")
str(sqf.2023)
# setup script
set.seed(024)
library(data.table)
library(readxl)
library(ggplot2)
library(pROC)
library(tidyverse)
library(mlr3verse)
library(mlr3fairness)
library(mice)
library(checkmate)
library(iml)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("program/data_cleaning.R")
str(sqf.2023)
names(sqf.2023)
sqf.2023$JURISDICTION_DESCRIPTION
unique(sqf.2023$JURISDICTION_DESCRIPTION)
names(sqf.2023)
table(sqf.2023$OTHER_CONTRABAND_FLAG)
table(sqf.2023$FIREARM_FLAG)
table(sqf.2023$KNIFE_CUTTER_FLAG)
table(sqf.2023$OTHER_WEAPON_FLAG)
table(sqf.2023$PHYSICAL_FORCE_CEW_FLAG)
sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG
table(sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
names(sqf.2023)
table(sqf.2023$SUSPECT_BODY_BUILD_TYPE)
table(sqf.2023$PHYSICAL_FORCE_CEW_FLAG)
table(sqf.2023$PHYSICAL_FORCE_DRAW_POINT_FIREARM_FLAG)
table(sqf.2023$PHYSICAL_FORCE_HANDCUFF_SUSPECT_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_SUSPECT_KNOWN_TO_CARRY_WEAPON_FLAG)
table(sqf.2023$SUSPECTS_ACTIONS_CONCEALED_POSSESSION_WEAPON_FLAG)
table(sqf.2023$SEARCH_BASIS_ADMISSION_FLAG)
table(sqf.2023$VERBAL_IDENTIFIES_OFFICER_FLAG)
table(sqf.2023$STOP_WAS_INITIATED)
str(sqf.2023$ISSUING_OFFICER_RANK)
table(sqf.2023$ISSUING_OFFICER_RANK)
table(sqf.2023$SUPERVISING_ACTION_CORRESPONDING_ACTIVITY_LOG_ENTRY_REVIEWED)
table(sqf.2023$JURISDICTION_DESCRIPTION)
table(sqf.2023$LOCATION_IN_OUT_CODE)
summary(sqf.2023$OBSERVED_DURATION_MINUTES)
summary(sqf.2023$STOP_DURATION_MINUTES)
table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION)
table(sqf.2023$OTHER_PERSON_STOPPED_FLAG)
table(sqf.2023$SUSPECT_ARREST_OFFENSE)
table(sqf.2023$ID_CARD_IDENTIFIES_OFFICER_FLAG)
table(sqf.2023$PHYSICAL_FORCE_HANDCUFF_SUSPECT_FLAG)
table(sqf.2023$PHYSICAL_FORCE_OC_SPRAY_USED_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_VIOLENT_CRIME_FLAG)
table(sqf.2023$BACKROUND_CIRCUMSTANCES_SUSPECT_KNOWN_TO_CARRY_WEAPON_FLAG)
table(sqf.2023$SUSPECTS_ACTIONS_DECRIPTION_FLAG)
table(sqf.2023$SUSPECTS_ACTIONS_DRUG_TRANSACTIONS_FLAG)
table(sqf.2023$SUSPECTS_ACTIONS_CONCEALED_POSSESSION_WEAPON_FLAG)
table(sqf.2023$SEARCH_BASIS_HARD_OBJECT_FLAG)
table(sqf.2023$DEMEANOR_OF_PERSON_STOPPED)
table(sqf.2023$SUSPECT_OTHER_DESCRIPTION)
table(sqf.2023$STOP_LOCATION_PRECINCT)
table(sqf.2023$STOP_LOCATION_PATROL_BORO_NAME)
names(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
sqf.2023[, 40:47]
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
sqf.2023[, 40:47]
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
82-18
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
sqf.2023[, ..(40:47)]
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
str(sqf.2023)
table(sqf.2023$OTHER_CONTRABAND_FLAG)
table(sqf.2023$FIREARM_FLAG)
table(sqf.2023$KNIFE_CUTTER_FLAG)
table(sqf.2023$OTHER_WEAPON_FLAG)
table(sqf.2023$WEAPON_FOUND_FLAG)
269 + 1344 + 1165
791 + 2778
1344 + 269
791 + 1613
sqf.2023 |> filter(FIREARM_FLAG == "Y" & WEAPON_FOUND_FLAG == "N")
sqf.2023 |> filter(FIREARM_FLAG == "Y" & WEAPON_FOUND_FLAG == "N") |> View()
str(sqf.2023)
summary(sqf.2023)
table(sqf.2023$KNIFE_CUTTER_FLAG)
unique(sqf.2023$KNIFE_CUTTER_FLAG)
sqf.2023$OTHER_CONTRABAND_FLAG <- factor(sqf.2023$OTHER_CONTRABAND_FLAG)
summary(sqf.2023)
sqf.2023$FIREARM_FLAG <- factor(sqf.2023$FIREARM_FLAG)
summary(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
names(sqf.2023)
?contains
sqf.2023 |> contains("OFFICER")
grepl(names(sqf.2023), "[:alpha:]*_OFFICER_[:alpha:]*")
?grepl
pattern <- "[:alpha:]*_OFFICER_[:alpha:]*"
grepl(pattern, names(sqf.2023))
names(sqf.2023)[grepl(pattern, names(sqf.2023))]
# remove all officer columns
pattern.officer <- "[:alpha:]*_OFFICER_[:alpha:]*"
grep(pattern.officer, names(sqf.2023))
officer.cols <- grep(pattern.officer, names(sqf.2023))
sqf.2023[, officer.cols := NULL]
setDT(sqf.2023)
sqf.2023[, officer.cols := NULL]
# remove all officer columns
pattern.officer <- "[:alpha:]*_OFFICER_[:alpha:]*"
officer.cols <- grep(pattern.officer, names(sqf.2023))
sqf.2023[, officer.cols := NULL]
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
setDT(sqf.2023)
n <- nrow(sqf.2023)
sqf.2023[sqf.2023 == "(null)"] <- NA
# remove all officer columns
pattern.officer <- "[:alpha:]*_OFFICER_[:alpha:]*"
officer.cols <- grep(pattern.officer, names(sqf.2023))
sqf.2023[, officer.cols := NULL]
sqf.2023[, ..(officer.cols) := NULL]
sqf.2023[, .(officer.cols) := NULL]
officer.cols
officer.cols <- grep(pattern.officer, names(sqf.2023))
officer.cols
sqf.2023[, (officer.cols) := NULL]
sqf.2023[,9]
sqf.2023[,10]
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
dim(sqf.2023)
sqf.2023[,9]
setDT(sqf.2023)
n <- nrow(sqf.2023)
sqf.2023[sqf.2023 == "(null)"] <- NA
# remove all officer columns
pattern.officer <- "[:alpha:]*_OFFICER_[:alpha:]*"
officer.cols <- grep(pattern.officer, names(sqf.2023))
sqf.2023[, (officer.cols) := NULL]
sqf.2023[,9]
sqf.2023[,10]
dim(sqf.2023)
pattern.identify <- "[:alpha:]*_IDENTIFIES_[:alpha:]*"
grep(pattern.identify, names(sqf.2023))
names(sqf.2023)
officer.cols
pattern.location <- "[:alpha:]*_LOCATION_[:alpha:]*"
location.cols <- grep(pattern.location, names(sqf.2023))
location.cols
sqf.2023[, .(location.cols)]
sqf.2023[, (location.cols)]
sqf.2023[, ..location.cols]
location.cols
# Identify columns that match the pattern
location.cols <- grep(pattern.location, names(sqf.2023), value = TRUE)
location.cols
pattern.location <- "[:alpha:]*_LOCATION_[:alpha:]*"
location.cols <- grep(pattern.location, names(sqf.2023))
location.cols
sqf.2023[, 75]
location.cols
location.cols[-length(location.cols)]
sqf.2023[, (location.cols[-length(location.cols)]) := NULL]
dim(sqf.2023)
names(sqf.2023)
# remove all columns that start with PHYSICAL_FORCE
pattern.force <- "PHYSICAL_FORCE[:alpha:]*"
force.cols <- grep(pattern.force, names(sqf.2023))
force.cols
sqf.2023[,(force.cols)]
sqf.2023[,..force.cols]
sqf.2023[, (force.cols) := NULL]
dim(sqf.2023)
names(sqf.2023)
sqf.2023$YEAR2 <- NULL
sqf.2023$STOP_FRISK_DATE <- NULL
sqf.2023$RECORD_STATUS_CODE <- NULL
sqf.2023$DEMEANOR_OF_PERSON_STOPPED <- NULL
sqf.2023$SUPERVISING_ACTION_CORRESPONDING_ACTIVITY_LOG_ENTRY_REVIEWED <- NULL
sqf.2023$JURISDICTION_CODE <- NULL
sqf.2023$OFFICER_NOT_EXPLAINED_STOP_DESCRIPTION <- NULL
sqf.2023$SUSPECT_OTHER_DESCRIPTION <- NULL
names(sqf.2023)
str(sqf.2023)
# go through each column an check whether it matches alpha or digit
# if it matches digit, convert it to numeric
col.names <- names(sqf.2023)[-c(1,2)]
# Apply the transformation to all columns that match the pattern
sqf.2023[, (col.names) := lapply(.SD, function(x) {
if (all(is.na(x) | grepl("[[:digit:]]+", x))) as.numeric(x) else x
}), .SDcols = col.names]
str(sqf.2023)
# convert all the columns that end on FLAG or FLG to factor
flag.cols <- grep("FLAG$|FLG$", names(sqf.2023))
sqf.2023[, ..flag.cols]
sqf.2023[, (flag.cols) := lapply(.SD, as.factor), .SDcols = flag.cols]
str(sqf.2023)
convertFactorNumeric(sqf.2023, "FRISKED_FLAG", c("Y", "N"), c(1, 0))
convertFactorNumeric(sqf.2023, "SEARCHED_FLAG", c("Y", "N"), c(1, 0))
convertFactorNumeric(sqf.2023, "SUMMONS_ISSUED_FLAG", c("Y", "N"), c(1, 0))
convertFactorNumeric(sqf.2023, "SUSPECT_ARRESTED_FLAG", c("Y", "N"), c(1, 0))
sqf.2023$SUSPECT_SEX <- factor(sqf.2023$SUSPECT_SEX, levels = c("FEMALE", "MALE"), labels = c(0, 1))
sqf.2023$SUSPECT_RACE_DESCRIPTION <- factor(sqf.2023$SUSPECT_RACE_DESCRIPTION,
levels = c("BLACK", "WHITE HISPANIC", "BLACK HISPANIC",
"WHITE","ASIAN / PACIFIC ISLANDER",
"MIDDLE EASTERN/SOUTHWEST ASIAN",
"AMERICAN INDIAN/ALASKAN NATIVE"))
sqf.2023$STOP_LOCATION_BORO_NAME <- factor(sqf.2023$STOP_LOCATION_BORO_NAME)
sqf.2023$LOCATION_IN_OUT_CODE <- factor(sqf.2023$LOCATION_IN_OUT_CODE)
sqf.2023$STOP_WAS_INITIATED <- factor(sqf.2023$STOP_WAS_INITIATED)
sqf.2023$MONTH2 <- factor(sqf.2023$MONTH2)
sqf.2023$DAY2 <- factor(sqf.2023$DAY2)
sqf.2023$SUSPECT_BODY_BUILD_TYPE <- factor(sqf.2023$SUSPECT_BODY_BUILD_TYPE)
sqf.2023$SUSPECT_EYE_COLOR <- factor(sqf.2023$SUSPECT_EYE_COLOR)
sqf.2023$SUSPECT_HAIR_COLOR <- factor(sqf.2023$SUSPECT_HAIR_COLOR)
sqf.2023$STOP_LOCATION_PRECINCT <- factor(sqf.2023$STOP_LOCATION_PRECINCT)
# binning of stop time of the day
# 6 - 12: AM
# 12 - 18: PM
# 18 - 22: evening
# 22 - 6 : night
# convert times to numeric values
sqf.2023 <- sqf.2023 |>
mutate(STOP_FRISK_TIME = sub(":", ".", substr(STOP_FRISK_TIME, 1, 5))) |>
mutate(STOP_FRISK_TIME = round(as.numeric(STOP_FRISK_TIME))) |>
mutate(STOP_FRISK_TIME = ifelse(STOP_FRISK_TIME == 24, 0, STOP_FRISK_TIME))
# bin time
sqf.2023$STOP_FRISK_TIME <- cut(
sqf.2023$STOP_FRISK_TIME,
breaks = c(0, 6, 12, 18, 24),
labels = c("night", "AM", "PM", "evening"),
right = FALSE
)
str(sqf.2023)
sqf.2023 <- read_excel("data/sqf-2023.xlsx")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
summary(sqf.2023)
unique(sqf.2023$MONTH2)
