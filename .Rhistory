age = test.set$SUSPECT_REPORTED_AGE,
location = test.set$STOP_LOCATION_BOR,
sex = test.set$SUSPECT_SEX,
race = test.set$SUSPECT_RACE_DESCRIPTION
)
predicted.dt |>
group_by(sex) |>
summarise(prop = sum(response_opt) / n())
predicted.dt |>
group_by(sex) |>
summarise(count = n())
predicted.dt[response_opt == 1 & sex == 1, ]
nrow(predicted.dt[response_opt == 1 & sex == 1, ])
nrow(predicted.dt[sex == 1])
nrow(predicted.dt[response_opt == 1 & sex == 1, ]) / nrow(predicted.dt[sex == 1])
nrow(predicted.dt[response_opt == 1 & sex == 0, ]) / nrow(predicted.dt[sex == 0])
predicted.dt[, .(prop = mean(response_opt)), by = sex]
aggregate(predicted ~ test.set$SUSPECT_SEX, FUN = mean)
# Statistical Parity for SUSPECT_ARRESTED_FLAG
# P(d = 1 | Y = 1) = P(d = 1 | Y = 0)
predicted.dt[, .(prop = mean(response_opt)), by = sex]
# It is more likely for females to be arrested
predicted.dt[, .(prop = mean(response_opt)), by = race]
# It is more likely for females to be arrested
predicted.dt[, .(prop = mean(response_opt)), by = race][, order(prop)]
# It is more likely for females to be arrested
predicted.dt[, .(prop = mean(response_opt)), by = race][order(prop)]
rocobj <- roc(test.set$SUSPECT_ARRESTED_FLAG, predicted)
test <- train.set[, !..other.targets, with = FALSE]
str(test$SUSPECT_ARRESTED_FLAG)
table(test$SUSPECT_ARRESTED_FLAG)
predicted.dt[, .N, by = race]
protected.a
summary(arrest.model)
exp(1.999e+00)
exp(9.413e-01)
exp(2.568e+00)
test.set
test.set[, `:=`(
prob = predicted,
response = ifelse(predicted > coords(rocobj, "best")$threshold, 1, 0)
)]
test.set
test.set <- test.set |>
select(STOP_ID, SUSPECT_ARRESTED_FLAG, prob, response, everything())
test.set
predicted.dt[, .(prop = mean(response_opt)), by = SUSPECT_SEX]
test.set[, .(prop = mean(response_opt)), by = SUSPECT_SEX]
test.set[, .(prop = mean(response)), by = SUSPECT_SEX]
# It is more likely for females to be arrested
test.set[, .(prop = mean(response)), by = SUSPECT_RACE_DESCRIPTION][order(prop)]
test.set[, .N, by = SUSPECT_RACE_DESCRIPTION]
test.set[, .(prop = mean(response)), by = .(SUSPECT_SEX, WEAPON_FOUND_FLAG)]
names(test.set)
# Conditional statistical parity
test.set[, .(prop = mean(response)), by = .(SUSPECT_SEX, STOP_LOCATION_BORO_NAME)]
# Conditional statistical parity
test.set[, .(prop = mean(response)), by = .(SUSPECT_SEX, STOP_LOCATION_BORO_NAME)][order(SUSPECT_SEX)]
test.set[, .(prop = mean(response)), by = .(SUSPECT_RACE_DESCRIPTION, WEAPON_FOUND_FLAG)][order(prop)]
test.set[, .(prop = mean(response)), by = .(SUSPECT_RACE_DESCRIPTION, WEAPON_FOUND_FLAG)][order(SUSPECT_RACE_DESCRIPTION)]
test.set[, .(prop = mean(response)), by = .(SUSPECT_RACE_DESCRIPTION, STOP_LOCATION_BORO_NAME)][order(SUSPECT_RACE_DESCRIPTION)]
test.set
# Predictive parity
test.set[, .(prop = mean(SUSPECT_ARRESTED_FLAG)), by = .(SUSPECT_SEX, response)]
n <- nrow(sqf.2023)
n
sqf.2023 <- read_excel("Data/sqf-2023.xlsx")
str(sqf.2023)
setDT(sqf.2023)
n <- nrow(sqf.2023)
n
nrow(sqf.complete.2023)
targets
protected.a
unique(sqf.2023$STOP_LOCATION_BORO_NAME)
unique(sqf.2023$SUSPECT_RACE_DESCRIPTION)
length(unique(sqf.2023$SUSPECT_RACE_DESCRIPTION))
length(unique(sqf.2023$STOP_LOCATION_PRECINCT))
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/description.R")
prop.data$STOP_LOCATION_BORO_NAME
prop.data$SUSPECT_SEX
prop.data$SUSPECT_RACE_DESCRIPTION
sqf.2023$SUSPECT_SEX <- factor(sqf.2023$SUSPECT_SEX, levels = c("MALE", "FEMALE"), labels = c(1, 0))
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/setup.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/modelling.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/independence_fairness.R")
# 3.2.1. Predictive parity
test.set[, .(prop = mean(SUSPECT_ARRESTED_FLAG)), by = .(SUSPECT_SEX, response)]
head(test.set)
test.set[, .(prop = mean(response)), by = .(SUSPECT_ARRESTED_FLAG, SUSPECT_SEX)]
# False positive error rate balance/ Predictive equality
test.set[, .(prop = mean(response)), by = .(SUSPECT_ARRESTED_FLAG, SUSPECT_SEX)]
# 3.2.1. Predictive parity
test.set[, .(prop = mean(SUSPECT_ARRESTED_FLAG)), by = .(SUSPECT_SEX, response)]
# 3.2.1. Predictive parity
test.set[, .(prop = mean(SUSPECT_ARRESTED_FLAG)), by = .(SUSPECT_SEX, response)]
1-0.4844961
1-0.5714286
table(sqf.complete.2023$WEAPON_FOUND_FLAG)
names(sqf.2023)
dim(sqf.2023)
names(sqf.2023)
length(unique(sqf.2023$SUSPECTED_CRIME_DESCRIPTION))
unique(sqf.2023$SUSPECTED_CRIME_DESCRIPTION)
table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION)
max(table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION))
name(max(table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION)))
names(max(table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION)))
max(table(sqf.2023$SUSPECTED_CRIME_DESCRIPTION))
unique(sqf.2023$WEAPON_FOUND_FLAG)
sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N]
sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", sum(WEAPON_FOUND_FLAG, na.rm = TRUE)]
1970 / 8978
sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N]
# given you had a weapon, were you arrested?
sqf.2023[WEAPON_FOUND_FLAG == "Y", sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / .N]
unique(sqf.2023$WEAPON_FOUND_FLAG)
# given you had a weapon, were you arrested?
sqf.2023[WEAPON_FOUND_FLAG == 1, sum(SUSPECT_ARRESTED_FLAG, na.rm = TRUE) / .N]
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
# people stopped because suspected to have a weapon and whether they actually had a weapon
sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N]
sqf.complete.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW"]
sqf.complete.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", ]
sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", ]
nrow(sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", ])
cpw.data <- sqf.2023[SUSPECTED_CRIME_DESCRIPTION == "CPW", ]
str(cpw.data)
sqf.2023[, sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N, by = SUSPECT_RACE_DESCRIPTION]
sqf.2023[, .(prop = sum(WEAPON_FOUND_FLAG, na.rm = TRUE)) / .N, by = SUSPECT_RACE_DESCRIPTION][order(prop)]
sqf.2023[, .(prop = sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N), by = SUSPECT_RACE_DESCRIPTION][order(prop)]
sqf.2023[, .(prop = sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N), by = SUSPECT_SEX][order(prop)]
sqf.2023[, .(prop = sum(WEAPON_FOUND_FLAG, na.rm = TRUE) / .N), by = SUSPECT_SEX]
ggplot(sqf.2023, aes(x = SUSPECT_RACE_DESCRIPTION, fill = WEAPON_FOUND_FLAG)) +
geom_bar(position = "fill")
ggplot(sqf.2023, aes(x = SUSPECT_RACE_DESCRIPTION, fill = WEAPON_FOUND_FLAG)) +
geom_bar()
ggplot(sqf.2023, aes(x = WEAPON_FOUND_FLAG, fill = SUSPECT_RACE_DESCRIPTION)) +
geom_bar()
sqf.2023 |>
filter(!is.na(SUSPECT_RACE_DESCRIPTION)) |>
ggplot(aes(x = WEAPON_FOUND_FLAG, fill = SUSPECT_RACE_DESCRIPTION)) +
geom_bar()
sqf.2023[WEAPON_FOUND_FLAG == 0, ]
table(sqf.2023[WEAPON_FOUND_FLAG == 0, ]$SUSPECT_RACE_DESCRIPTION)
prop.table(sqf.2023[WEAPON_FOUND_FLAG == 0, ]$SUSPECT_RACE_DESCRIPTION)
table(sqf.2023[WEAPON_FOUND_FLAG == 0, ]$SUSPECT_RACE_DESCRIPTION)
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 0) |>
group_by(SUSPECT_RACE_DESCRIPTION) |>
summarize(race_prop = n() / nrow(.))
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 0) |>
group_by(SUSPECT_RACE_DESCRIPTION) |>
summarize(race_prop = n() / nrow())
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 0) |>
group_by(SUSPECT_RACE_DESCRIPTION) |>
summarize(race_prop = n())
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 0) |>
group_by(SUSPECT_RACE_DESCRIPTION) |>
summarize(count = n()) |>
mutate(prop = count / sum(count))
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 1) |>
group_by(SUSPECT_RACE_DESCRIPTION) |>
summarize(count = n()) |>
mutate(prop = count / sum(count))
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 0) |>
group_by(SUSPECT_SEX) |>
summarize(count = n()) |>
mutate(prop = count / sum(count))
sqf.2023 |>
filter(WEAPON_FOUND_FLAG == 1) |>
group_by(SUSPECT_SEX) |>
summarize(count = n()) |>
mutate(prop = count / sum(count))
name(sqf.2023)
names(sqf.2023)
protected.a
table(sqf.2023$LOCATION_IN_OUT_CODE)
length(unique(sqf.2023$STOP_LOCATION_APARTMENT)))
length(unique(sqf.2023$STOP_LOCATION_APARTMENT))
unique(sqf.2023$STOP_LOCATION_APARTMENT)
table(sqf.2023$SUSPECT_BODY_BUILD_TYPE)
protected.a
table(sqf.2023$OFFICER_IN_UNIFORM_FLAG)
str(sqf.2023)
table(sqf.2023$STOP_WAS_INITIATED)
protected.a
unique(sqf.2023$STOP_LOCATION_PRECINCT)
sqf.2023$STOP_LOCATION_BORO_NAME <- factor(sqf.2023$STOP_LOCATION_BORO_NAME)
sqf.2023$LOCATION_IN_OUT_CODE <- factor(sqf.2023$LOCATION_IN_OUT_CODE)
sqf.2023$STOP_WAS_INITIATED <- factor(sqf.2023$STOP_WAS_INITIATED)
sqf.2023$MONTH2 <- factor(sqf.2023$MONTH2)
sqf.2023$DAY2 <- factor(sqf.2023$DAY2)
sqf.2023$OFFICER_EXPLAINED_STOP_FLAG <- factor(sqf.2023$OFFICER_EXPLAINED_STOP_FLAG)
sqf.2023$OFFICER_IN_UNIFORM_FLAG <- factor(sqf.2023$OFFICER_IN_UNIFORM_FLAG)
sqf.2023$ASK_FOR_CONSENT_FLG <- factor(sqf.2023$ASK_FOR_CONSENT_FLG)
sqf.2023$CONSENT_GIVEN_FLG <- factor(sqf.2023$CONSENT_GIVEN_FLG)
sqf.2023$SUSPECT_BODY_BUILD_TYPE <- factor(sqf.2023$SUSPECT_BODY_BUILD_TYPE)
sqf.2023$SUSPECT_EYE_COLOR <- factor(sqf.2023$SUSPECT_EYE_COLOR)
sqf.2023$SUSPECT_HAIR_COLOR <- factor(sqf.2023$SUSPECT_HAIR_COLOR)
sqf.2023$STOP_LOCATION_PRECINCT <- factor(sqf.2023$STOP_LOCATION_PRECINCT)
form.basic <-  WEAPON_FOUND_FLAG ~ SUSPECT_REPORTED_AGE + STOP_LOCATION_BORO_NAME +
SUSPECT_SEX + SUSPECT_RACE_DESCRIPTION + LOCATION_IN_OUT_CODE + STOP_WAS_INITIATED +
MONTH2 + DAY2 + STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT + SUSPECT_BODY_BUILD_TYPE + SUSPECT_EYE_COLOR +
SUSPECT_HAIR_COLOR + STOP_LOCATION_PRECINCT
x <- model.matrix(form.basic, data = sqf.2023)
y <- sqf.2023$WEAPON_FOUND_FLAG
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1)
x
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1)
# Extract the row indices by checking the row names of 'x'
used_indices <- as.numeric(rownames(x))
used_indices
# Subset y using the same indices
y <- sqf.2023$WEAPON_FOUND_FLAG[used_indices]
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1)
summary(model.lasso)
coef(model.lasso)
model.lasso$beta[, which(model.lasso$lambda == model.lasso$lambda.min)]
lambda.lasso <- cv.glmnet(x = x, y = y, family = "binomial", alpha = 1)$lambda.min
lambda.lasso
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1, lambda = lambda.lasso)
model.lasso$beta
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/setup.R")
form.basic <-  WEAPON_FOUND_FLAG ~ SUSPECT_REPORTED_AGE + STOP_LOCATION_BORO_NAME +
SUSPECT_SEX + SUSPECT_RACE_DESCRIPTION + LOCATION_IN_OUT_CODE + STOP_WAS_INITIATED +
MONTH2 + DAY2 + STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT + SUSPECT_BODY_BUILD_TYPE + SUSPECT_EYE_COLOR +
SUSPECT_HAIR_COLOR + STOP_LOCATION_PRECINCT
x <- model.matrix(form.basic, data = sqf.2023)
# Extract the row indices by checking the row names of 'x'
used_indices <- as.numeric(rownames(x))
# Subset y using the same indices
y <- sqf.2023$WEAPON_FOUND_FLAG[used_indices]
lambda.lasso <- cv.glmnet(x = x, y = y, family = "binomial", alpha = 1)$lambda.min
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1, lambda = lambda.lasso)
model.lasso$beta
library(smurf)
?p
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
x <- model.matrix(form.basic, data = sqf.2023)
# Extract the row indices by checking the row names of 'x'
used_indices <- as.numeric(rownames(x))
# Subset y using the same indices
y <- sqf.2023$WEAPON_FOUND_FLAG[used_indices]
lambda.lasso <- cv.glmnet(x = x, y = y, family = "binomial", alpha = 1)$lambda.min
model.lasso <- glmnet(x = x, y = y, family = "binomial", alpha = 1, lambda = lambda.lasso)
model.lasso$beta
summary(model.lasso)
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = "cv.mse")
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = "cv.mse")
table(sqf.2023$SUSPECT_EYE_COLOR)
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
# p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = "cv.mse")
table(sqf.2023$SUSPECT_HAIR_COLOR)
# remove levels that are very rare
hair.color <- c("GRN", "PLE")
# remove levels that are very rare
hair.color <- c("GRN", "PLE")
hair.color
eye.color <- c("MAR", "MUL", "PNK")
# remove levels that are very rare
hair.color <- c("GRN", "PLE")
eye.color <- c("MAR", "MUL", "PNK")
sqf.2023 <- sqf.2023 |>
filter(!SUSPECT_HAIR_COLOR %in% hair.color) |>
filter(!SUSPECT_EYE_COLOR %in% eye.color)
dim(sqf.2023)
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
# p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = "cv.mse")
table(sqf.2023$SUSPECT_HAIR_COLOR)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
table(sqf.2023$SUSPECT_HAIR_COLOR)
table(sqf.2023$SUSPECT_EYE_COLOR)
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
# p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = "cv.mse")
lasso <- model_grouplasso_cv$lambda
lasso <- model_grouplasso_cv$lambda
model_grouplasso <- glmsmurf(formula = form.basic,
family = "binomial", data = sqf.2023,
lambda = lasso)
summary(model_grouplasso)
model_grouplasso
### --- logistic regression --- ###
# leave 10 % out for testing the fairness definitions
set.seed(103)
idx.test <- sample(1:nrow(sqf.2023), ceiling(0.1 * nrow(sqf.2023)))
test.set <- sqf.2023[idx.test, ]
train.set <- sqf.2023[-idx.test, ]
cpw.data
### --- logistic regression --- ###
# leave 10 % out for testing the fairness definitions
set.seed(103)
idx.test <- sample(1:nrow(cpw.data), ceiling(0.1 * nrow(cpw.data)))
test.set <- cpw.data[idx.test, ]
train.set <- cpw.data[-idx.test, ]
# logistig regression with group lasso penalties
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = train.set,
lambda = "cv.mse")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
table(cpw.data$SUSPECT_HAIR_COLOR)
table(sqf.2023$SUSPECT_EYE_COLOR)
sqf.2023 <- read_excel("Data/sqf-2023.xlsx")
str(sqf.2023)
setDT(sqf.2023)
n <- nrow(sqf.2023)
sqf.2023[sqf.2023 == "(null)"] <- NA
## TARGETS
targets <- c("SUSPECT_ARRESTED_FLAG", "SUMMONS_ISSUED_FLAG", "FRISKED_FLAG", "SEARCHED_FLAG")
# PAs
protected.a <- c("SUSPECT_REPORTED_AGE", "STOP_LOCATION_BORO_NAME",
"SUSPECT_SEX", "SUSPECT_RACE_DESCRIPTION")
# go through each column an check whether it matches alpha or digit
# if it matches digit, convert it to numeric
col.names <- names(sqf.2023)[-c(2,3)]
# Apply the transformation to all columns that match the pattern
sqf.2023[, (col.names) := lapply(.SD, function(x) {
if (all(is.na(x) | grepl("[[:digit:]]+", x))) as.numeric(x) else x
}), .SDcols = col.names]
table(sqf.2023$SUSPECT_EYE_COLOR)
table(sqf.2023$SUSPECT_HAIR_COLOR)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
table(cpw.data$SUSPECT_HAIR_COLOR)
table(cpw.data$SUSPECT_EYE_COLOR)
# leave 10 % out for testing the fairness definitions
set.seed(103)
idx.test <- sample(1:nrow(cpw.data), ceiling(0.1 * nrow(cpw.data)))
test.set <- cpw.data[idx.test, ]
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = train.set,
lambda = "cv.mse")
table(cpw.data$SUSPECT_HAIR_COLOR)
table(sqf.data$SUSPECT_HAIR_COLOR)
table(sqf.2023$SUSPECT_HAIR_COLOR)
table(sqf.2023$SUSPECT_EYE_COLOR)
eye.color <- c("MAR", "MUL", "PNK", "OTH")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/01_Studium/13_Jahr_03/21_TrustML/NYPD_SQF_data/program/data_cleaning.R")
### --- logistic regression --- ###
# leave 10 % out for testing the fairness definitions
set.seed(103)
idx.test <- sample(1:nrow(cpw.data), ceiling(0.1 * nrow(cpw.data)))
test.set <- cpw.data[idx.test, ]
train.set <- cpw.data[-idx.test, ]
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso") +
p(STOP_LOCATION_PRECINCT, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = train.set,
lambda = "cv.mse")
form.basic <-  WEAPON_FOUND_FLAG ~
p(SUSPECT_REPORTED_AGE, pen = "lasso") +
p(STOP_LOCATION_BORO_NAME, pen = "grouplasso") +
SUSPECT_SEX +
p(SUSPECT_RACE_DESCRIPTION, pen = "grouplasso") +
LOCATION_IN_OUT_CODE +
STOP_WAS_INITIATED +
p(MONTH2, pen = "grouplasso") +
p(DAY2, pen = "grouplasso") +
STOP_DURATION_MINUTES + OFFICER_EXPLAINED_STOP_FLAG +
OFFICER_IN_UNIFORM_FLAG + ASK_FOR_CONSENT_FLG + CONSENT_GIVEN_FLG +
SUSPECT_HEIGHT + SUSPECT_WEIGHT +
p(SUSPECT_BODY_BUILD_TYPE, pen = "grouplasso") +
p(SUSPECT_EYE_COLOR, pen = "grouplasso") +
p(SUSPECT_HAIR_COLOR, pen = "grouplasso")
model_grouplasso_cv <- glmsmurf(formula = form.basic,
family = "binomial", data = train.set,
lambda = "cv.mse")
str(sqf.2023)
targets
table(sqf.2023$SUSPECT_RACE_DESCRIPTION)
table(sqf.2023$SUSPECT_SEX)
